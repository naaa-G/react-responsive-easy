name: Comprehensive Error Collection

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allow manual triggering

jobs:
  error-collection:
    name: Collect All Errors
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.18.1, 22]
      fail-fast: false  # Don't cancel other jobs if one fails
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.13.1
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run enhanced error collection
      run: |
        echo "Starting enhanced error collection for Node.js ${{ matrix.node-version }}"
        echo "Working directory: $(pwd)"
        echo "Node version: $(node --version)"
        echo "PNPM version: $(pnpm --version)"
        
        # Use enhanced error collector (focused on error lines only)
        pnpm collect-errors
        
        # Check if reports were generated
        echo "Checking for generated reports..."
        if [ -f "errors/focused-error-report.json" ]; then
          echo "✅ focused-error-report.json generated"
          ls -la errors/focused-error-report.json
        else
          echo "❌ focused-error-report.json not found"
        fi
        
        if [ -f "errors/focused-error-summary.md" ]; then
          echo "✅ focused-error-summary.md generated"
          ls -la errors/focused-error-summary.md
        else
          echo "❌ focused-error-summary.md not found"
        fi
        
        # List all files in root directory
        echo "Files in root directory:"
        ls -la *.json *.md 2>/dev/null || echo "No JSON or MD files found in root"
        
      continue-on-error: true  # Never fail - we want to collect all errors
      timeout-minutes: 30  # GitHub Actions timeout
    
    - name: Upload error reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: focused-error-reports-node-${{ matrix.node-version }}
        path: |
          errors/focused-error-report.json
          errors/focused-error-summary.md
        retention-days: 30
    
    - name: Display error summary
      if: always()
      run: |
        echo "=== ENHANCED ERROR COLLECTION SUMMARY ==="
        if [ -f errors/focused-error-summary.md ]; then
          cat errors/focused-error-summary.md
        else
          echo "No focused error summary generated"
        fi
        
        echo ""
        echo "=== QUICK ERROR COUNT ==="
        if [ -f errors/focused-error-report.json ]; then
          echo "Total error lines: $(jq '.summary.totalErrorLines' errors/focused-error-report.json)"
          echo "Total test errors: $(jq '.summary.totalTestErrors' errors/focused-error-report.json)"
          echo "Packages with errors: $(jq '.summary.packagesWithErrors' errors/focused-error-report.json)"
        else
          echo "No error report generated"
        fi
    
    - name: Generate GitHub Actions Summary
      if: always()
      run: |
        echo "# 🔍 Comprehensive Error Collection Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Node.js Version:** ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f error-report.json ]; then
          errors=$(jq '.summary.totalErrors' error-report.json)
          warnings=$(jq '.summary.totalWarnings' error-report.json)
          packages=$(jq '.summary.packagesWithErrors' error-report.json)
          
          echo "## 📊 Error Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Total Errors | $errors |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Warnings | $warnings |" >> $GITHUB_STEP_SUMMARY
          echo "| Packages with Errors | $packages |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "$errors" -gt 0 ]; then
            echo "## ❌ Critical Issues Found" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ **$errors errors** and **$warnings warnings** found across **$packages packages**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
            echo "1. Download the error reports from the artifacts" >> $GITHUB_STEP_SUMMARY
            echo "2. Review the detailed error summary" >> $GITHUB_STEP_SUMMARY
            echo "3. Fix errors systematically, starting with critical issues" >> $GITHUB_STEP_SUMMARY
            echo "4. Re-run this workflow to verify fixes" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ✅ No Critical Issues Found" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🎉 All packages passed error collection!" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "## ❌ Error Report Generation Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The error collection process failed to generate a report." >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "**Workflow:** [Comprehensive Error Collection](https://github.com/${{ github.repository }}/actions/workflows/error-collection.yml)" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

  # Generate consolidated report
  consolidate-report:
    name: Generate Consolidated Report
    runs-on: ubuntu-latest
    needs: error-collection
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all error reports
      uses: actions/download-artifact@v4
      with:
        path: error-reports/
    
    - name: Consolidate error reports
      run: |
        echo "# Consolidated Error Report" > consolidated-error-report.md
        echo "" >> consolidated-error-report.md
        echo "**Generated:** $(date)" >> consolidated-error-report.md
        echo "**Node.js Versions Tested:** 20.18.1, 22" >> consolidated-error-report.md
        echo "" >> consolidated-error-report.md
        
        # Process each Node.js version
        for version in 20.18.1 22; do
          if [ -d "error-reports/error-reports-node-$version" ]; then
            echo "## Node.js $version" >> consolidated-error-report.md
            echo "" >> consolidated-error-report.md
            
            if [ -f "error-reports/error-reports-node-$version/error-summary.md" ]; then
              # Extract summary from each version
              echo "### Summary" >> consolidated-error-report.md
              grep -A 10 "## Root Level Checks" "error-reports/error-reports-node-$version/error-summary.md" >> consolidated-error-report.md || true
              echo "" >> consolidated-error-report.md
            fi
            
            if [ -f "error-reports/error-reports-node-$version/error-report.json" ]; then
              echo "### Error Counts" >> consolidated-error-report.md
              echo "- Total Errors: $(jq '.summary.totalErrors' "error-reports/error-reports-node-$version/error-report.json")" >> consolidated-error-report.md
              echo "- Total Warnings: $(jq '.summary.totalWarnings' "error-reports/error-reports-node-$version/error-report.json")" >> consolidated-error-report.md
              echo "- Packages with Errors: $(jq '.summary.packagesWithErrors' "error-reports/error-reports-node-$version/error-report.json")" >> consolidated-error-report.md
              echo "" >> consolidated-error-report.md
            fi
          fi
        done
        
        # Add recommendations
        echo "## Recommendations" >> consolidated-error-report.md
        echo "" >> consolidated-error-report.md
        echo "1. **Review all error reports** for each Node.js version" >> consolidated-error-report.md
        echo "2. **Focus on common errors** across all versions first" >> consolidated-error-report.md
        echo "3. **Fix version-specific issues** after addressing common problems" >> consolidated-error-report.md
        echo "4. **Test incrementally** - fix one package at a time" >> consolidated-error-report.md
        echo "5. **Use the detailed JSON reports** for programmatic analysis" >> consolidated-error-report.md
        echo "" >> consolidated-error-report.md
        
        # Create a simple error summary
        echo "## Quick Error Summary" >> consolidated-error-report.md
        echo "" >> consolidated-error-report.md
        echo "| Node.js Version | Total Errors | Total Warnings | Packages with Errors |" >> consolidated-error-report.md
        echo "|----------------|--------------|----------------|---------------------|" >> consolidated-error-report.md
        
        for version in 20.18.1 22; do
          if [ -f "error-reports/error-reports-node-$version/error-report.json" ]; then
            errors=$(jq '.summary.totalErrors' "error-reports/error-reports-node-$version/error-report.json")
            warnings=$(jq '.summary.totalWarnings' "error-reports/error-reports-node-$version/error-report.json")
            packages=$(jq '.summary.packagesWithErrors' "error-reports/error-reports-node-$version/error-report.json")
            echo "| $version | $errors | $warnings | $packages |" >> consolidated-error-report.md
          else
            echo "| $version | N/A | N/A | N/A |" >> consolidated-error-report.md
          fi
        done
    
    - name: Upload consolidated report
      uses: actions/upload-artifact@v4
      with:
        name: consolidated-error-report
        path: consolidated-error-report.md
        retention-days: 30
    
    - name: Generate Consolidated GitHub Actions Summary
      if: always()
      run: |
        echo "# 🔍 Consolidated Error Collection Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Generated:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Node.js Versions Tested:** 20.18.1, 22" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Create a summary table
        echo "## 📊 Error Summary by Node.js Version" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Node.js Version | Total Errors | Total Warnings | Packages with Errors | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|----------------|--------------|----------------|---------------------|--------|" >> $GITHUB_STEP_SUMMARY
        
        total_errors=0
        total_warnings=0
        total_packages=0
        
        for version in 20.18.1 22; do
          if [ -f "error-reports/error-reports-node-$version/error-report.json" ]; then
            errors=$(jq '.summary.totalErrors' "error-reports/error-reports-node-$version/error-report.json")
            warnings=$(jq '.summary.totalWarnings' "error-reports/error-reports-node-$version/error-report.json")
            packages=$(jq '.summary.packagesWithErrors' "error-reports/error-reports-node-$version/error-report.json")
            
            if [ "$errors" -gt 0 ]; then
              status="❌ Issues Found"
            else
              status="✅ Clean"
            fi
            
            echo "| $version | $errors | $warnings | $packages | $status |" >> $GITHUB_STEP_SUMMARY
            
            total_errors=$((total_errors + errors))
            total_warnings=$((total_warnings + warnings))
            total_packages=$((total_packages + packages))
          else
            echo "| $version | N/A | N/A | N/A | ⚠️ No Report |" >> $GITHUB_STEP_SUMMARY
          fi
        done
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🎯 Overall Status" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Errors Across All Versions:** $total_errors" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Warnings Across All Versions:** $total_warnings" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Packages with Errors:** $total_packages" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ $total_errors -gt 0 ]; then
          echo "## ❌ Action Required" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **$total_errors errors** and **$total_warnings warnings** found across all Node.js versions" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Recommended Actions:" >> $GITHUB_STEP_SUMMARY
          echo "1. **Download detailed reports** from the workflow artifacts" >> $GITHUB_STEP_SUMMARY
          echo "2. **Focus on common errors** that appear across multiple Node.js versions" >> $GITHUB_STEP_SUMMARY
          echo "3. **Fix version-specific issues** after addressing common problems" >> $GITHUB_STEP_SUMMARY
          echo "4. **Test incrementally** - fix one package at a time" >> $GITHUB_STEP_SUMMARY
          echo "5. **Re-run this workflow** to verify fixes" >> $GITHUB_STEP_SUMMARY
        else
          echo "## ✅ All Clear!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 No errors found across any Node.js version!" >> $GITHUB_STEP_SUMMARY
          echo "The codebase is ready for production deployment." >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "**Workflow:** [Comprehensive Error Collection](https://github.com/${{ github.repository }}/actions/workflows/error-collection.yml)" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
    
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('consolidated-error-report.md')) {
            const report = fs.readFileSync('consolidated-error-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🔍 Comprehensive Error Collection Report\n\n${report}\n\n📁 **Download detailed reports:** Check the workflow artifacts for individual Node.js version reports.`
            });
          }

  # Final status
  final-status:
    name: Collection Status
    runs-on: ubuntu-latest
    needs: [error-collection, consolidate-report]
    if: always()
    
    steps:
    - name: Collection Summary
      run: |
        echo "=== COMPREHENSIVE ERROR COLLECTION COMPLETED ==="
        echo ""
        echo "✅ Error collection completed for all Node.js versions"
        echo "📊 Consolidated report generated"
        echo "📁 All reports uploaded as artifacts"
        echo ""
        echo "Next steps:"
        echo "1. Download the consolidated-error-report artifact"
        echo "2. Review error-reports-node-* artifacts for detailed analysis"
        echo "3. Fix errors systematically, starting with common issues"
        echo "4. Re-run this workflow to verify fixes"
        echo ""
        echo "This workflow is designed to NEVER fail - it collects all errors"
        echo "so you can fix them in bulk rather than one at a time."
