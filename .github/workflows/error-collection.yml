name: Comprehensive Error Collection

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allow manual triggering

jobs:
  error-collection:
    name: Collect All Errors
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
      fail-fast: false  # Don't cancel other jobs if one fails
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.13.1
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    
    - name: Make error collector executable
      run: chmod +x tools/error-collector.js
    
    - name: Run comprehensive error collection
      run: |
        echo "Starting comprehensive error collection for Node.js ${{ matrix.node-version }}"
        node tools/error-collector.js
      continue-on-error: true  # Never fail - we want to collect all errors
    
    - name: Upload error reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: error-reports-node-${{ matrix.node-version }}
        path: |
          error-report.json
          error-summary.md
        retention-days: 30
    
    - name: Display error summary
      if: always()
      run: |
        echo "=== ERROR COLLECTION SUMMARY ==="
        if [ -f error-summary.md ]; then
          cat error-summary.md
        else
          echo "No error summary generated"
        fi
        
        echo ""
        echo "=== QUICK ERROR COUNT ==="
        if [ -f error-report.json ]; then
          echo "Total errors: $(jq '.summary.totalErrors' error-report.json)"
          echo "Total warnings: $(jq '.summary.totalWarnings' error-report.json)"
          echo "Packages with errors: $(jq '.summary.packagesWithErrors' error-report.json)"
        else
          echo "No error report generated"
        fi

  # Generate consolidated report
  consolidate-report:
    name: Generate Consolidated Report
    runs-on: ubuntu-latest
    needs: error-collection
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all error reports
      uses: actions/download-artifact@v4
      with:
        path: error-reports/
    
    - name: Consolidate error reports
      run: |
        echo "# Consolidated Error Report" > consolidated-error-report.md
        echo "" >> consolidated-error-report.md
        echo "**Generated:** $(date)" >> consolidated-error-report.md
        echo "**Node.js Versions Tested:** 18, 20, 22" >> consolidated-error-report.md
        echo "" >> consolidated-error-report.md
        
        # Process each Node.js version
        for version in 18 20 22; do
          if [ -d "error-reports/error-reports-node-$version" ]; then
            echo "## Node.js $version" >> consolidated-error-report.md
            echo "" >> consolidated-error-report.md
            
            if [ -f "error-reports/error-reports-node-$version/error-summary.md" ]; then
              # Extract summary from each version
              echo "### Summary" >> consolidated-error-report.md
              grep -A 10 "## Root Level Checks" "error-reports/error-reports-node-$version/error-summary.md" >> consolidated-error-report.md || true
              echo "" >> consolidated-error-report.md
            fi
            
            if [ -f "error-reports/error-reports-node-$version/error-report.json" ]; then
              echo "### Error Counts" >> consolidated-error-report.md
              echo "- Total Errors: $(jq '.summary.totalErrors' "error-reports/error-reports-node-$version/error-report.json")" >> consolidated-error-report.md
              echo "- Total Warnings: $(jq '.summary.totalWarnings' "error-reports/error-reports-node-$version/error-report.json")" >> consolidated-error-report.md
              echo "- Packages with Errors: $(jq '.summary.packagesWithErrors' "error-reports/error-reports-node-$version/error-report.json")" >> consolidated-error-report.md
              echo "" >> consolidated-error-report.md
            fi
          fi
        done
        
        # Add recommendations
        echo "## Recommendations" >> consolidated-error-report.md
        echo "" >> consolidated-error-report.md
        echo "1. **Review all error reports** for each Node.js version" >> consolidated-error-report.md
        echo "2. **Focus on common errors** across all versions first" >> consolidated-error-report.md
        echo "3. **Fix version-specific issues** after addressing common problems" >> consolidated-error-report.md
        echo "4. **Test incrementally** - fix one package at a time" >> consolidated-error-report.md
        echo "5. **Use the detailed JSON reports** for programmatic analysis" >> consolidated-error-report.md
        echo "" >> consolidated-error-report.md
        
        # Create a simple error summary
        echo "## Quick Error Summary" >> consolidated-error-report.md
        echo "" >> consolidated-error-report.md
        echo "| Node.js Version | Total Errors | Total Warnings | Packages with Errors |" >> consolidated-error-report.md
        echo "|----------------|--------------|----------------|---------------------|" >> consolidated-error-report.md
        
        for version in 18 20 22; do
          if [ -f "error-reports/error-reports-node-$version/error-report.json" ]; then
            errors=$(jq '.summary.totalErrors' "error-reports/error-reports-node-$version/error-report.json")
            warnings=$(jq '.summary.totalWarnings' "error-reports/error-reports-node-$version/error-report.json")
            packages=$(jq '.summary.packagesWithErrors' "error-reports/error-reports-node-$version/error-report.json")
            echo "| $version | $errors | $warnings | $packages |" >> consolidated-error-report.md
          else
            echo "| $version | N/A | N/A | N/A |" >> consolidated-error-report.md
          fi
        done
    
    - name: Upload consolidated report
      uses: actions/upload-artifact@v4
      with:
        name: consolidated-error-report
        path: consolidated-error-report.md
        retention-days: 30
    
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('consolidated-error-report.md')) {
            const report = fs.readFileSync('consolidated-error-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üîç Comprehensive Error Collection Report\n\n${report}\n\nüìÅ **Download detailed reports:** Check the workflow artifacts for individual Node.js version reports.`
            });
          }

  # Final status
  final-status:
    name: Collection Status
    runs-on: ubuntu-latest
    needs: [error-collection, consolidate-report]
    if: always()
    
    steps:
    - name: Collection Summary
      run: |
        echo "=== COMPREHENSIVE ERROR COLLECTION COMPLETED ==="
        echo ""
        echo "‚úÖ Error collection completed for all Node.js versions"
        echo "üìä Consolidated report generated"
        echo "üìÅ All reports uploaded as artifacts"
        echo ""
        echo "Next steps:"
        echo "1. Download the consolidated-error-report artifact"
        echo "2. Review error-reports-node-* artifacts for detailed analysis"
        echo "3. Fix errors systematically, starting with common issues"
        echo "4. Re-run this workflow to verify fixes"
        echo ""
        echo "This workflow is designed to NEVER fail - it collects all errors"
        echo "so you can fix them in bulk rather than one at a time."
